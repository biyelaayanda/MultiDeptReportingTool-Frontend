{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.loginForm = {\n        username: '',\n        password: ''\n      };\n      this.isLoading = false;\n      this.error = '';\n    }\n    ngOnInit() {\n      console.log('AuthComponent ngOnInit - checking authentication');\n      // If already authenticated, redirect to appropriate dashboard immediately\n      if (this.authService.isAuthenticated()) {\n        const userRole = this.authService.getUserRole();\n        console.log('Already authenticated with role:', userRole);\n        if (userRole) {\n          this.redirectToRoleDashboard(userRole);\n          return;\n        }\n      }\n      // Subscribe to authentication changes\n      this.authSubscription = this.authService.currentUser$.subscribe(user => {\n        console.log('AuthService currentUser$ subscription triggered:', user);\n        if (user) {\n          this.redirectToRoleDashboard(user.role);\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.authSubscription) {\n        this.authSubscription.unsubscribe();\n      }\n    }\n    onSubmit() {\n      if (!this.loginForm.username || !this.loginForm.password) {\n        this.error = 'Please fill in username and password';\n        return;\n      }\n      this.isLoading = true;\n      this.error = '';\n      // Remove role requirement from login form\n      const loginRequest = {\n        username: this.loginForm.username,\n        password: this.loginForm.password\n      };\n      this.authService.login(loginRequest).subscribe({\n        next: response => {\n          console.log('Login successful:', response);\n          this.isLoading = false;\n          // Navigation will be handled by the subscription in ngOnInit\n        },\n        error: error => {\n          console.error('Login error:', error);\n          this.isLoading = false;\n          this.error = error.error?.message || 'Login failed. Please check your credentials.';\n        }\n      });\n    }\n    redirectToRoleDashboard(role) {\n      console.log('User role:', role, 'Redirecting to appropriate dashboard');\n      const route = this.authService.getDefaultRouteForRole();\n      console.log('Redirecting to:', route);\n      this.router.navigate([route]);\n    }\n    goToRegister() {\n      this.router.navigate(['/register']);\n    }\n    static {\n      this.ɵfac = function AuthComponent_Factory(t) {\n        return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthComponent,\n        selectors: [[\"app-auth\"]],\n        decls: 35,\n        vars: 5,\n        consts: [[\"loginFormRef\", \"ngForm\"], [1, \"auth-container\"], [1, \"auth-card\"], [1, \"auth-form\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"login-btn\", 3, \"disabled\"], [1, \"register-link\"], [\"type\", \"button\", 1, \"link-btn\", 3, \"click\"], [1, \"demo-credentials\"], [1, \"error-message\"]],\n        template: function AuthComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h2\");\n            i0.ɵɵtext(3, \"Multi-Department Reporting Tool\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"p\");\n            i0.ɵɵtext(5, \"Please log in to access your dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"form\", 3, 0);\n            i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_6_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onSubmit());\n            });\n            i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Username:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 6);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_11_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.loginForm.username, $event) || (ctx.loginForm.username = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Password:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 8);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_15_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.loginForm.password, $event) || (ctx.loginForm.password = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 3, 1, \"div\", 9);\n            i0.ɵɵelementStart(17, \"button\", 10);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"div\", 11)(20, \"p\");\n            i0.ɵɵtext(21, \"Don't have an account? \");\n            i0.ɵɵelementStart(22, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_22_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.goToRegister());\n            });\n            i0.ɵɵtext(23, \" Create one here \");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(24, \"div\", 13)(25, \"h4\");\n            i0.ɵɵtext(26, \"Demo Credentials:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"p\")(28, \"strong\");\n            i0.ɵɵtext(29, \"Admin:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(30, \" admin / Admin123!\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"p\")(32, \"strong\");\n            i0.ɵɵtext(33, \"Staff:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(34, \" john.staff / Staff123!\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            const loginFormRef_r3 = i0.ɵɵreference(7);\n            i0.ɵɵadvance(11);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginForm.username);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginForm.password);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.isLoading || !loginFormRef_r3.form.valid);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n          }\n        },\n        dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n        styles: [\".auth-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:60vh;padding:2rem}.auth-card[_ngcontent-%COMP%]{background:#fff;border-radius:8px;box-shadow:0 4px 6px #0000001a;padding:2rem;width:100%;max-width:400px;text-align:center}.auth-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#2c3e50;margin-bottom:.5rem}.auth-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#7f8c8d;margin-bottom:2rem}.auth-form[_ngcontent-%COMP%]{text-align:left}.form-group[_ngcontent-%COMP%]{margin-bottom:1rem}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:.5rem;color:#2c3e50;font-weight:500}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{width:100%;padding:.75rem;border:1px solid #bdc3c7;border-radius:4px;font-size:1rem;box-sizing:border-box}.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus, .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus{outline:none;border-color:#3498db;box-shadow:0 0 0 2px #3498db33}.login-btn[_ngcontent-%COMP%]{width:100%;background-color:#3498db;color:#fff;border:none;padding:.75rem;border-radius:4px;font-size:1rem;cursor:pointer;margin-top:1rem;transition:background-color .3s ease}.login-btn[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#2980b9}.login-btn[_ngcontent-%COMP%]:disabled{background-color:#95a5a6;cursor:not-allowed}.error-message[_ngcontent-%COMP%]{color:#e74c3c;background-color:#fadbd8;padding:.75rem;border-radius:4px;border:1px solid #f1948a;font-size:.9rem}.register-link[_ngcontent-%COMP%]{margin-top:1.5rem;padding-top:1rem;border-top:1px solid #e0e6ed}.register-link[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;color:#7f8c8d;font-size:.9rem}.link-btn[_ngcontent-%COMP%]{background:none;border:none;color:#3498db;cursor:pointer;text-decoration:underline;font-size:.9rem;font-weight:500;transition:color .3s ease}.link-btn[_ngcontent-%COMP%]:hover{color:#2980b9}.demo-credentials[_ngcontent-%COMP%]{margin-top:2rem;padding:1rem;background-color:#f8f9fa;border-radius:4px;text-align:left}.demo-credentials[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin:0 0 .5rem;color:#2c3e50;font-size:.9rem}.demo-credentials[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:.25rem 0;font-size:.8rem;color:#7f8c8d}\"]\n      });\n    }\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}