{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ExportService = /*#__PURE__*/(() => {\n  class ExportService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiUrl}/api/export`;\n    }\n    // Export Generation\n    generateExport(request) {\n      return this.http.post(`${this.apiUrl}/generate`, request);\n    }\n    downloadExport(exportId) {\n      return this.http.get(`${this.apiUrl}/download/${exportId}`, {\n        responseType: 'blob'\n      });\n    }\n    getExportStatus(exportId) {\n      return this.http.get(`${this.apiUrl}/status/${exportId}`);\n    }\n    // Export Formats\n    getSupportedFormats() {\n      return this.http.get(`${this.apiUrl}/supported-formats`);\n    }\n    // Export History\n    getExportHistory() {\n      return this.http.get(`${this.apiUrl}/history`);\n    }\n    deleteExportHistory(exportId) {\n      return this.http.delete(`${this.apiUrl}/history/${exportId}`);\n    }\n    // Export Templates\n    getExportTemplates() {\n      return this.http.get(`${this.apiUrl}/templates`);\n    }\n    getExportTemplate(templateId) {\n      return this.http.get(`${this.apiUrl}/templates/${templateId}`);\n    }\n    createExportTemplate(template) {\n      return this.http.post(`${this.apiUrl}/templates`, template);\n    }\n    updateExportTemplate(templateId, template) {\n      return this.http.put(`${this.apiUrl}/templates/${templateId}`, template);\n    }\n    deleteExportTemplate(templateId) {\n      return this.http.delete(`${this.apiUrl}/templates/${templateId}`);\n    }\n    // Email Notifications\n    sendEmailNotification(notification) {\n      return this.http.post(`${this.apiUrl}/email/send`, notification);\n    }\n    testEmailConfiguration(emailAddress) {\n      return this.http.post(`${this.apiUrl}/email/test`, {\n        emailAddress\n      });\n    }\n    getEmailTemplates() {\n      return this.http.get(`${this.apiUrl}/email/templates`);\n    }\n    // Scheduled Reports\n    getScheduledReports() {\n      return this.http.get(`${this.apiUrl}/scheduled-reports`);\n    }\n    getScheduledReport(reportId) {\n      return this.http.get(`${this.apiUrl}/scheduled-reports/${reportId}`);\n    }\n    createScheduledReport(report) {\n      return this.http.post(`${this.apiUrl}/scheduled-reports`, report);\n    }\n    updateScheduledReport(reportId, report) {\n      return this.http.put(`${this.apiUrl}/scheduled-reports/${reportId}`, report);\n    }\n    deleteScheduledReport(reportId) {\n      return this.http.delete(`${this.apiUrl}/scheduled-reports/${reportId}`);\n    }\n    enableScheduledReport(reportId) {\n      return this.http.put(`${this.apiUrl}/scheduled-reports/${reportId}/enable`, {});\n    }\n    disableScheduledReport(reportId) {\n      return this.http.put(`${this.apiUrl}/scheduled-reports/${reportId}/disable`, {});\n    }\n    runScheduledReportNow(reportId) {\n      return this.http.post(`${this.apiUrl}/scheduled-reports/${reportId}/run-now`, {});\n    }\n    // Chart Generation\n    generateChart(config) {\n      return this.http.post(`${this.apiUrl}/charts/generate`, config, {\n        responseType: 'text'\n      });\n    }\n    getChartTypes() {\n      return this.http.get(`${this.apiUrl}/charts/types`);\n    }\n    getChartTemplates() {\n      return this.http.get(`${this.apiUrl}/charts/templates`);\n    }\n    // Bulk Operations\n    exportMultipleReports(reportIds, format) {\n      const request = {\n        reportIds,\n        format,\n        includeCharts: true,\n        includeRawData: true\n      };\n      return this.generateExport(request);\n    }\n    bulkEmailExports(exports) {\n      return this.http.post(`${this.apiUrl}/bulk-email`, exports);\n    }\n    // Advanced Export Features\n    exportWithCustomFilters(filters, format) {\n      const request = {\n        reportIds: [],\n        format,\n        includeCharts: true,\n        includeRawData: true,\n        filters\n      };\n      return this.generateExport(request);\n    }\n    previewExport(request) {\n      return this.http.post(`${this.apiUrl}/preview`, request);\n    }\n    validateExportRequest(request) {\n      return this.http.post(`${this.apiUrl}/validate`, request);\n    }\n    // Export Statistics\n    getExportStatistics() {\n      return this.http.get(`${this.apiUrl}/statistics`);\n    }\n    getUserExportQuota() {\n      return this.http.get(`${this.apiUrl}/quota`);\n    }\n    // File Management\n    cleanupExpiredExports() {\n      return this.http.post(`${this.apiUrl}/cleanup`, {});\n    }\n    extendExportExpiry(exportId, days) {\n      return this.http.put(`${this.apiUrl}/extend-expiry/${exportId}`, {\n        days\n      });\n    }\n    static {\n      this.ɵfac = function ExportService_Factory(t) {\n        return new (t || ExportService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ExportService,\n        factory: ExportService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ExportService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}